name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITLAB_BASE_URL: "https://gitlab.com"
      GITLAB_TEST_PROJECT_URL: "https://gitlab.com/gitlab-org/api/client-go"

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25.1'
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: go test ./... -v
      continue-on-error: false

    - name: Run linter
      run: golangci-lint run
      continue-on-error: false

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: docker build -t di-matrix-cli:latest .
      continue-on-error: false

    - name: Run tests in Docker
      run: docker build --target test-stage -t di-matrix-cli:test .
      continue-on-error: false

    - name: Run linter in Docker
      run: docker build --target lint-stage -t di-matrix-cli:lint .
      continue-on-error: false

    - name: Run full CI pipeline in Docker
      run: |
        docker build --target test-stage -t di-matrix-cli:test .
        docker build --target lint-stage -t di-matrix-cli:lint .
        docker build -t di-matrix-cli:latest .
      continue-on-error: false
